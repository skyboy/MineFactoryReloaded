// This simple grabs the latest 'forge' plugin, or ForgeGradle, from Forge's servers.
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

// We apply the 'forge' plugin, so ForgeGradle can do it's stuff.
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'

group = 'powercrystals' // Your main package.
archivesBaseName = 'MineFactoryReloaded'

repositories {
    maven {
        name = "ChickenBones repo"
        url = "http://chickenbones.net/maven/"
    }
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net/"
    }
    maven {
        name = "Player's Maven"
        url = "http://maven.ic2.player.to/"
    }
    maven {
        name = "Progwml6's Maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    ivy {
        name "Agricraft"
        ivyPattern 'http://www.google.com/FAKE_URL/ugly_workaround_because_curseforge_403.txt'
        artifactPattern "http://media.forgecdn.net/files/${agricraft_cf}/[module]-[revision].[ext]"
    }
    ivy {
        name "InfinityLib"
        ivyPattern 'http://www.google.com/FAKE_URL/ugly_workaround_because_curseforge_403.txt'
        artifactPattern "http://media.forgecdn.net/files/${infinitylib_cf}/[module]-[revision].[ext]"
    }
}

dependencies {
    compile "codechicken:CodeChickenLib:${mc_version}-${ccl_version}:deobf"
    compile "cofh:CoFHCore:${mc_version}-${cofhcore_version}:deobf"
    compile "net.industrial-craft:industrialcraft-2:${ic2_version}"
    compile "net.sengir.forestry:forestry_${mc_version}:${forestry_version}"
    deobfCompile "com.infinityraider:agricraft:${agricraft_version}"
    deobfCompile "com.infinityraider:infinitylib:${infinitylib_version}"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = "${mod_version}." + (System.getenv("BUILD_NUMBER") ?: "1")

minecraft {
    version = mc_version + "-" + forge_version
    mappings = mcp_mappings
    runDir = "run"
    replace '${mod_version}', mod_version
    makeObfSourceJar = false
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'resources'
        }
    }
}

processResources {
    inputs.property "version", version
    inputs.property "mc_version", mc_version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mc_version': mc_version
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}

version = "${project.minecraft.version}-${project.version}"

def commonManifest = {
    attributes 'FMLAT': 'MFR_at.cfg'
}

jar {
    classifier = 'universal'
    manifest commonManifest
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    manifest commonManifest
}

task srcJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
    manifest commonManifest
}

// Tell the artifact system about our extra jars
artifacts {
    archives deobfJar
    archives srcJar
}

// Configure an upload task.
uploadArchives {
    repositories {
        mavenDeployer {
            if (project.hasProperty("local_maven")) {
                repository(url: "file://${local_maven}")
                pom {
                    groupId = project.group
                    // Force the maven upload to use the <mcversion>-<version> syntax preferred at files
                    artifactId = project.archivesBaseName
                    project {
                        name project.archivesBaseName
                        packaging 'jar'
                        description 'MinefactoryReloaded'
                        url 'https://github.com/skyboy/MinefactoryReloaded'

                        scm {
                            url 'https://github.com/skyboy/MinefactoryReloaded'
                            connection 'scm:git:git://github.com/skyboy/MinefactoryReloaded.git'
                            developerConnection 'scm:git:git@github.com:skyboy/MinefactoryReloaded.git'
                        }

                        issueManagement {
                            system 'github'
                            url 'https://github.com/skyboy/MinefactoryReloaded/issues'
                        }
                    }
                }
            }
        }
	}
}
